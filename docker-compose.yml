# docker-compose.yml

version: '3.8'

services:
  app:
    build: .
    container_name: crypto-exchange-app
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - cassandra
      - kafka
    volumes:
      - ./logs:/root/logs
      - ./config.yaml:/root/config.yaml
    environment:
      - ENVIRONMENT=development

  db:
    image: postgres:14-alpine
    container_name: crypto-exchange-db
    restart: always
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: securepassword
      POSTGRES_DB: crypto_exchange_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: crypto-exchange-redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  cassandra:
    image: cassandra:4.1
    container_name: crypto-exchange-cassandra
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_KEYSPACE: crypto_exchange
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 10s
      timeout: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: crypto-exchange-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: crypto-exchange-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

volumes:
  pgdata:
  redisdata:
  cassandra_data: